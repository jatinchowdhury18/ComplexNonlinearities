notifications:
  email: false

language: cpp
sudo: false

# if pull request: always build
# if push: only build for master branch
if: (type != push) OR (type = push AND branch = master)

env:
  global:
    - secure: dCb30oqp5InBZdk3e/t0mJ0+zaW4HdyzV5/C/NKR/Si5OcwDAMmoLWY9vbu+C0a2gdKzyh1e0Tic+JYvMGgtdTZLI61YlKmlkWxWxH5FOQgjmj9I3BVpX3oKLi9GLoSMdI/jGaNmUZTn+8xa8Wj8OTHHobLQSY/RNzXTxwyxvmUqoED6sP/Fl86+er5r4qg8lyr/mwnP9q2e1GBJqciUId5g9jZcUHOBKDP30c/E3zlydQuY7L4hU7rb9JePuX0HDngj8jpwlVRMi94vyOMCKH771JKZazxUwVbm4W5E35mQnFcowRhmnhWIJp0IBamPt0Cwv0rucX90nPMGlNzX8VwkteQBlN0F7DJqnfa4ew//TjZ+qax9312SONqYx/7Gnq0mn2BYqXOKXeD9BKMCpv9ubbDQEMs+suJBq2zH0rPOF/Q1Tpg1nXvp/UbMZeu9BtUicPM+ehyVS2LxNLVemNwy3spgZaAdcDFtKQVb+CRMjGZa6PErmhIqU36f46g8W9LRnd0u9gBXSkxWLy3Xb/lhNYH2KWM0mzu0pGWejwIJ9RO6inXj1ryhUvo00F+DSXPxekgk/1zxk7VVXSgrpiJ7lPC92fSZLDaH4N9KHMHEV331cTyIyo3Ni8R64RT7sj7O2dV9kGlMZgxp7/RhG8XYHQ4a7b12MRZC26L4F1U=

os:
  - osx
  - windows
  - linux
env:
  - PLUGIN=CopyEQ
  - PLUGIN=DoubleSoftClipper
  - PLUGIN=Exciter
  - PLUGIN=Hysteresis
  - PLUGIN=NonlinearBiquad
  - PLUGIN=NonlinearFeedback
  - PLUGIN=Wavefolder
  - PLUGIN=NonlinearAllpass

stages:
  - name: addons
    if: os == linux
  - name: services
    if: os == linux
  - name: cache
    if: NOT (os == linux)

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-6
      - g++-6
      - freeglut3-dev
      - g++
      - libasound2-dev
      - libcurl4-openssl-dev
      - libfreetype6-dev
      - libjack-jackd2-dev
      - libx11-dev
      - libxcomposite-dev
      - libxcursor-dev
      - libxinerama-dev
      - libxrandr-dev
      - mesa-common-dev
      - ladspa-sdk
      - webkit2gtk-4.0
      - libgtk-3-dev

services:
        - xvfb

cache:
  directories:
  - $TRAVIS_BUILD_DIR/JUCE/extras/Projucer/
  - $TRAVIS_BUILD_DIR/JUCE/modules/
  - $TRAVIS_BUILD_DIR/JUCE/VST2_SDK/

before_install:
  # mac installs
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then gem install xcpretty; fi
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then gem install xcpretty-travis-formatter; fi
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then export BUILD_FOLDER="MacOSX"; fi
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then export PROJUCER_EXPORT="$TRAVIS_BUILD_DIR/JUCE/extras/Projucer/Builds/MacOSX/build/Debug/Projucer.app/Contents/MacOS/Projucer"; fi

  # windows setup msbuild path
  - if [[ $TRAVIS_OS_NAME == 'windows' ]]; then export PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin":$PATH; fi
  - if [[ $TRAVIS_OS_NAME == 'windows' ]]; then export BUILD_FOLDER="VisualStudio2017"; fi
  - if [[ $TRAVIS_OS_NAME == 'windows' ]]; then export PROJUCER_EXPORT="$TRAVIS_BUILD_DIR/JUCE/extras/Projucer/Builds/VisualStudio2017/x64/Debug/App/Projucer.exe"; fi

  # linux setup
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then export BUILD_FOLDER="LinuxMakefile"; fi
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then export PROJUCER_EXPORT="$TRAVIS_BUILD_DIR/JUCE/extras/Projucer/Builds/LinuxMakefile/build/Projucer"; fi

  # Build Projucer
  - cd $TRAVIS_BUILD_DIR/
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then sh travis_scripts/build_projucer.sh $PROJUCER_EXPORT $BUILD_FOLDER $TRAVIS_OS_NAME; fi
  - if [[ $TRAVIS_OS_NAME == 'windows' ]]; then sh travis_scripts/build_projucer.sh $PROJUCER_EXPORT $BUILD_FOLDER $TRAVIS_OS_NAME; fi
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then bash travis_scripts/build_projucer.sh $PROJUCER_EXPORT $BUILD_FOLDER $TRAVIS_OS_NAME; fi

script:
  - cd $TRAVIS_BUILD_DIR/$PLUGIN/Plugin
  - export PROJUCER=$PROJUCER_EXPORT
  - $PROJUCER --set-global-search-path $TRAVIS_OS_NAME defaultJuceModulePath  $TRAVIS_BUILD_DIR/JUCE/modules
  - $PROJUCER --set-global-search-path $TRAVIS_OS_NAME vstLegacyPath $TRAVIS_BUILD_DIR/JUCE/VST2_SDK
  - $PROJUCER --resave $PLUGIN.jucer
  - cd Builds/$BUILD_FOLDER/

  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then xcodebuild -project $PLUGIN.xcodeproj/ clean; fi
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then xcodebuild -project $PLUGIN.xcodeproj/ -configuration Release | xcpretty -s -f `xcpretty-travis-formatter`; fi
  - if [[ $TRAVIS_OS_NAME == 'windows' ]]; then msbuild.exe -v:normal $PLUGIN.sln; fi
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then make CONFIG=Release; fi

  # Pluginval
  - |
    if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
      echo "Validating plugin"
      cd $TRAVIS_BUILD_DIR/
      curl -L "https://github.com/Tracktion/pluginval/releases/download/latest_release/pluginval_macOS.zip" -o pluginval.zip
      unzip pluginval
      pluginval.app/Contents/MacOS/pluginval --strictness-level 8 --validate-in-process --validate "$TRAVIS_BUILD_DIR/$PLUGIN/Plugin/Builds/MacOSX/build/Release/$PLUGIN.vst3" || exit 1
      pluginval.app/Contents/MacOS/pluginval --strictness-level 8 --validate-in-process --validate "$TRAVIS_BUILD_DIR/$PLUGIN/Plugin/Builds/MacOSX/build/Release/$PLUGIN.component" || exit 1
    fi
  - |
    if [[ $TRAVIS_OS_NAME == 'windows' ]]; then
      echo "Validating plugin"
      cd $TRAVIS_BUILD_DIR/
      powershell -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest https://github.com/Tracktion/pluginval/releases/download/latest_release/pluginval_Windows.zip -OutFile pluginval.zip"
      powershell -Command "Expand-Archive pluginval.zip -DestinationPath ."
      ./pluginval.exe --strictness-level 8 --validate-in-process --validate "$TRAVIS_BUILD_DIR/$PLUGIN/Plugin/Builds/VisualStudio2017/x64/Debug/VST3/$PLUGIN.vst3"
    fi
  - |
    if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
      curl -L "https://github.com/Tracktion/pluginval/releases/download/latest_release/pluginval_Linux.zip" -o pluginval.zip
      unzip pluginval
      ./pluginval --strictness-level 8 --validate-in-process --validate "$TRAVIS_BUILD_DIR/$PLUGIN/Plugin/Builds/LinuxMakefile/build/$PLUGIN.so" || exit 1
    fi

  - echo "SUCCESS"

after_success: # upload mac bins
  - |
    if [[ $TRAVIS_OS_NAME == 'osx' && type != push ]]; then
      echo "Copying Files..."
      cd $TRAVIS_BUILD_DIR/
      cp -R $TRAVIS_BUILD_DIR/$PLUGIN/Plugin/Builds/MacOSX/build/Release/$PLUGIN.app       $TRAVIS_BUILD_DIR/Bin/$PLUGIN/Mac/$PLUGIN.app
      cp -R $TRAVIS_BUILD_DIR/$PLUGIN/Plugin/Builds/MacOSX/build/Release/$PLUGIN.component $TRAVIS_BUILD_DIR/Bin/$PLUGIN/Mac/$PLUGIN.component
      cp -R $TRAVIS_BUILD_DIR/$PLUGIN/Plugin/Builds/MacOSX/build/Release/$PLUGIN.vst       $TRAVIS_BUILD_DIR/Bin/$PLUGIN/Mac/$PLUGIN.vst
      cp -R $TRAVIS_BUILD_DIR/$PLUGIN/Plugin/Builds/MacOSX/build/Release/$PLUGIN.vst3      $TRAVIS_BUILD_DIR/Bin/$PLUGIN/Mac/$PLUGIN.vst3

      echo "Setting Up Git..."
      git config --global user.email "travis@travis-ci.org"
      git config --global user.name "Travis CI"

      echo "Committing Files..."
      git checkout -b builds
      git add $TRAVIS_BUILD_DIR/Bin/
      git commit -m "Travis build- $TRAVIS_BUILD_NUMBER"

      echo "Pushing to branch..."
      git push https://${GH_TOKEN}@github.com/jatinchowdhury18/ComplexNonlinearities.git
    fi
